apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tensorflow-deploy
  namespace: ops
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tensorflow-deploy
    spec:
      containers:
      - name: tensorflow
        image: hub.com/base/tensorflow-serving:1.13.0
        ports:
        - containerPort: 8500
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8500
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8500
          timeoutSeconds: 1
        env:
        - name: MODEL_NAME
          value: "sentiment_classification"
        volumeMounts:
          - name: "model-nas"
            mountPath: "/models/sentiment_classification"
      volumes:
        - name: "model-nas"
          flexVolume:
            driver: "alicloud/nas"
            options:
              server: "109374ad3b-vkl4.cn-beijing.nas.aliyuncs.com"
              path: "/model_base"
              vers: "4.0"
---
apiVersion: v1
kind: Service
metadata:
  name: tensorflow-deploy
  namespace: ops
  #annotations:
  #  service.beta.kubernetes.io/alicloud-loadbalancer-protocol-port: "tcp:80"
  #  service.beta.kubernetes.io/alicloud-loadbalancer-address-type: intranet
  #  service.beta.kubernetes.io/alicloud-loadbalancer-bandwidth: "-1"
  #  service.beta.kubernetes.io/alicloud-loadbalancer-id: 
  #  service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: "true"
spec:
  type: NodePort
  ports:
    - port: 8500
      protocol: TCP
      targetPort: 8500
      name: rpc
  selector:
    app: tensorflow-deploy
